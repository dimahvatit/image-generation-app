import React, { useState, useEffect, ChangeEvent } from "react";
import { Loader, Card, FormField } from "../components";

type RenderCardsProps = {
    data: Array<typeof Card>;
    title: string;
};

type Post = {
    _id: string;
    name: string;
    prompt: string;
    photo: string;
}

function RenderCards({data, title}: RenderCardsProps): any {
    if (data?.length > 0) {
        return data.map((post: any) => <Card {...post} key={post._id}/>);
    }

    return (
        <h2 className="mt-5 font-bold text-[#6449ff] text-x1 uppercase">
            {title}
        </h2>
    );
}

const Home = () => {
    const [loading, setloading] = useState(false);
    const [allPosts, setAllposts] = useState([]);
    const [searchText, setSearchText] = useState("");
    const [searchResults, setSearchResults] = useState([]);
    const [searchTimeout, setSearchTimeout] = useState<NodeJS.Timeout | null>(null);

    useEffect(() => {
        const fetchPosts = async () => {
            setloading(true);

            try {
                const response = await fetch(`${process.env.SERVICE_URL}/api/v1/post`, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                if (response.ok) {
                    const result = await response.json();

                    setAllposts(result.data.reverse());
                }
            } catch (err: any) {
                alert(err.message);
            } finally {
                setloading(false);
            }
        };

        fetchPosts();
    }, []);

    const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {
        if (searchTimeout) {
            clearTimeout(searchTimeout);
        }
        setSearchText(event.target.value);
        setSearchTimeout(
            setTimeout(() => {
                const filteredPosts = allPosts.filter((post: Post) => post.prompt.toLowerCase().includes(searchText.toLowerCase()) ||
                    post.name.toLowerCase().includes(searchText.toLowerCase()));
                setSearchResults(filteredPosts);
            }, 500)
        )
    };

    return (
        <section className="max-w-7xl mx-auto">
            <div className="flex flex-col justify-center items-center">
                <h1 className="font-extrabold text-[#222328] text-[32px]">
                    The Community Showcase
                </h1>
                <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
                    Browse through a collection of imaginative and visually
                    stunning images generated by DALL-E AI
                </p>
            </div>

            <div className="mt-16">
                <FormField labelName="Search posts"
                           type="text"
                           name="text"
                           placeholder="Search something..."
                           value={searchText}
                           handleChange={handleSearchChange}
                />
            </div>

            <div className="mt-10">
                {loading ? (
                    <div className="flex justify-center items-center">
                        <Loader/>
                    </div>
                ) : (
                    <>
                        {searchText && (
                            <h2 className="font-medium text-[#666e75] text-xl mb-3">
                                Showing results for{" "}
                                <span className="text-[#222328]">
									{searchText}
								</span>
                                :
                            </h2>
                        )}
                        <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                            {searchText ? (
                                <RenderCards data={searchResults} title="No search results found"
                                />
                            ) : (
                                <RenderCards data={allPosts} title="No posts found"/>
                            )}
                        </div>
                    </>
                )}
            </div>
        </section>
    );
};

export default Home;
